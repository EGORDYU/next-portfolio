import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import { useTheme } from 'next-themes';
import { FiChevronDown } from 'react-icons/fi';
import { motion } from 'framer-motion';
import { Link as ScrollLink, animateScroll as scroll, scroller } from 'react-scroll';
import styles from '../styles/animations.module.css';
import '../styles/Home.module.css';
import '../styles/Projects.module.css';
import '../styles/Modal.module.css';
import { projects, contracting } from '../data/projects';
import skills from '../data/skills';
import hobbies from '../data/hobbies';
import Modal from './modal';

export default function Home() {
  const { theme, setTheme } = useTheme();
  const [expandedIndex, setExpandedIndex] = useState(-1);
  const [activeLink, setActiveLink] = useState('about');
  const [selectedProject, setSelectedProject] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const toggleTheme = () => {
    setTheme(theme === 'dark' ? 'light' : 'dark');
  };

  const toggleExpand = (index) => {
    if (index === expandedIndex) {
      setExpandedIndex(-1);
    } else {
      setExpandedIndex(index);
    }
  };

  useEffect(() => {
    const onScroll = () => {
      const viewportHeight = window.innerHeight;
      const midpoint = viewportHeight / 2;
  
      const section1 = document.getElementById('about');
      const section2 = document.getElementById('skills');
      const section3 = document.getElementById('projects');
      const section4 = document.getElementById('contact');
      const section5 = document.getElementById('contracts')
      
  
      const distance1 = section1.getBoundingClientRect().top;
      const distance2 = section2.getBoundingClientRect().top;
      const distance3 = section3.getBoundingClientRect().top;
      const distance4 = section4.getBoundingClientRect().top;
      const distance5 = section5.getBoundingClientRect().top;
  
      const isInMiddle = (distance) => {
        return distance >= midpoint * 0.5 && distance <= midpoint * 1.5;
      };
  
      if (isInMiddle(distance1)) {
        setActiveLink('about');
      } else if (isInMiddle(distance2)) {
        setActiveLink('skills');
      } else if (isInMiddle(distance3)) {
        setActiveLink('projects');
      } else if (isInMiddle(distance4)) {
        setActiveLink('contact');
      } else if (isInMiddle(distance5)){
        setActiveLink('contracts')
      }
    };
  
    window.addEventListener('scroll', onScroll);
  
    return () => {
      window.removeEventListener('scroll', onScroll);
    };
  }, []);
  

  return (
    <div className="container mx-auto max-w-4xl px-4">
      <Head>
        <title>Egor's Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <nav className={`fixed top-0 right-40 h-screen ${theme === 'light' ? 'text-black' : 'text-white'}`}>
        <div className="h-full flex flex-col justify-center items-center">
          <button
            onClick={toggleTheme}
            className="mb-6 py-2 px-4 border rounded-full text-sm uppercase tracking-wide font-bold transition-colors duration-200 transform hover:scale-105 dark:hover:bg-white dark:hover:text-black dark:bg-black dark:text-white"
          >
            {theme === 'light' ? 'Toggle Dark Mode' : 'Toggle Light Mode'}
          </button>
          <ScrollLink
            to="about"
            smooth={true}
            duration={500}
            className={`text-3xl font-semibold mb-4 py-2 px-4 rounded-full hover:bg-red-300 outline ${styles['navigation-link']} ${styles['about-link']} ${activeLink === 'about' ? 'activeNavLink' : ''}`}
            onClick={() => setExpandedIndex(-1)}
          >
            About
          </ScrollLink>
          <ScrollLink
            to="skills"
            smooth={true}
            duration={500}
            className={`text-3xl font-semibold mb-4 py-2 px-4 rounded-full hover:bg-blue-300 outline ${styles['navigation-link']} ${styles['skills-link']} ${activeLink === 'skills' ? 'activeNavLink' : ''}`}
            onClick={() => setExpandedIndex(-1)}
          >
            Skills
          </ScrollLink>
          <ScrollLink
            to="contracts"
            smooth={true}
            duration={500}
            className={`text-3xl font-semibold mb-4 py-2 px-4 rounded-full hover:bg-green-300 outline ${styles['navigation-link']} ${styles['contact-link']} ${activeLink === 'contact' ? 'activeNavLink' : ''}`}
            onClick={() => setExpandedIndex(-1)}
          >
            Contract Work
          </ScrollLink>
          <ScrollLink
            to="projects"
            smooth={true}
            duration={500}
            className={`text-3xl font-semibold mb-4 py-2 px-4 rounded-full hover:bg-purple-300 outline ${styles['navigation-link']} ${styles['projects-link']} ${activeLink === 'projects' ? 'activeNavLink' : ''}`}
            onClick={() => setExpandedIndex(-1)}
          >
            Personal Projects
          </ScrollLink>
          <ScrollLink
            to="contact"
            smooth={true}
            duration={500}
            className={`text-3xl font-semibold mb-4 py-2 px-4 rounded-full hover:bg-green-300 outline ${styles['navigation-link']} ${styles['contact-link']} ${activeLink === 'contact' ? 'activeNavLink' : ''}`}
            onClick={() => setExpandedIndex(-1)}
          >
            Contact
          </ScrollLink>
          
        </div>
      </nav>

      <main>
        <section id="about" className="mb-8 flex items-center pt-[200px]">
          <div className="grid grid-cols-2 gap-8">
            <div>
              <motion.h1
                initial={{ opacity: 0, translateY: 20 }}
                animate={{ opacity: 1, translateY: 0 }}
                transition={{ duration: 0.8 }}
                className={`font-bold text-2xl mb-2 ${styles['animation-fade-in']}`}
              >
                About Me
              </motion.h1>
              <motion.p
                initial={{ opacity: 0, translateY: 20 }}
                animate={{ opacity: 1, translateY: 0 }}
                transition={{ duration: 0.8, delay: 0.2 }}
                className={`text-xl text-gray-600 dark:text-gray-400 ${styles['animation-fade-in']}`}
              >
                Hi, I'm Egor Dyuzhev, a developer with skills in various languages and
                frameworks. I specialize in JavaScript, CSS, React, Python, Django, and Next.js. I'm passionate about coding and building creative solutions to complex problems. I'm constantly learning and exploring new technologies to expand my skill set.
              </motion.p>
            </div>
            <motion.div
              initial={{ opacity: 0, translateY: 20 }}
              animate={{ opacity: 1, translateY: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className={`flex justify-center ${styles['animation-fade-in']}`}
            >
              <img src="/egor.png" alt="Egor Dyuzhev" className="w-full max-w-sm h-auto rounded-lg shadow-lg" />

            </motion.div>
          </div>
        </section>

        <section id="skills" className="mb-8 pt-16">
          <motion.h1
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className={`font-bold text-2xl mb-2 ${styles['animation-fade-in']}`}
          >
            Skills
          </motion.h1>
          <motion.ul
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}
            className={`flex flex-wrap gap-2 ${styles['animation-fade-in']}`}
          >
            {skills.map((skill, index) => (
              <motion.li
                key={index}
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.4, delay: index * 0.1 }}
                className="bg-gray-200 dark:bg-gray-700 py-1 px-2 rounded"
              >
                {skill}
              </motion.li>
            ))}
          </motion.ul>
        </section>


        <section id="hobbies" className="mb-8 pt-16">
          <motion.h1
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className={`font-bold text-2xl mb-2 ${styles['animation-fade-in']}`}
          >
            Hobbies
          </motion.h1>
          <motion.ul
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}
            className={`flex flex-wrap gap-2 ${styles['animation-fade-in']}`}
          >
            {hobbies.map((hobby, index) => (
              <motion.li
                key={index}
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.4, delay: index * 0.1 }}
                className="bg-gray-200 dark:bg-gray-700 py-1 px-2 rounded"
              >
                {hobby}
              </motion.li>
            ))}
          </motion.ul>
        </section>


        <section id="contracts" className="mb-8 pt-16">
          <motion.h1
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 1 }}
            className={`font-bold text-2xl mb-2 ${styles['animation-fade-in']}`}
          >
            Contracts
          </motion.h1>
          <ul className="grid grid-cols-2 gap-4">
            {contracting.map((contract, index) => (
              <motion.li
                key={index}
                initial={{ opacity: 0, translateY: 20 }}
                animate={{ opacity: 1, translateY: 0 }}
                transition={{ duration: 0.8, delay: 1.2 + index * 0.2 }}
                className={`border dark:border-gray-700 p-8 rounded-xl project animation-fade-in hover-outline`}
                style={{ backgroundImage: `url(${contract.bgImage})`, backgroundSize: 'cover' }}
                onClick={() => {
                    setSelectedProject(contract);
                    setIsModalOpen(true);
                }}
            >
                <div onClick={() => setSelectedProject(contract)}>
                  <a
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-blue-600 hover:underline dark:text-blue-400 text-lg font-semibold"
                  >
                    <div className='text-2xl outline-text'>
                      {contract.title}
                      <br />
                    </div>
                  </a>
                </div>
                <div className="mt-4">
                </div>
                {expandedIndex === index && (
                  <motion.div
                    initial={{ opacity: 0, translateY: 10 }}
                    animate={{ opacity: 1, translateY: 0 }}
                    transition={{ duration: 0.4 }}
                    className={`mt-4 ${styles['animation-fade-in']}`}
                  >
                    <p className="text-lg">{contract.additionalDescription}</p>
                    {/* Add any additional content you want to show when expanded */}
                  </motion.div>
                )}
              </motion.li>
            ))}
          </ul>

          {selectedProject && (
            <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} project={selectedProject} theme={theme} />
          )}
        </section>
        <section id="projects" className="mb-8 pt-16">
          <motion.h1
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 1 }}
            className={`font-bold text-2xl mb-2 ${styles['animation-fade-in']}`}
          >
            Personal Projects 
          </motion.h1>
          <ul className="grid grid-cols-2 gap-4">
            {projects.map((project, index) => (
              <motion.li
                key={index}
                initial={{ opacity: 0, translateY: 20 }}
                animate={{ opacity: 1, translateY: 0 }}
                transition={{ duration: 0.8, delay: 1.2 + index * 0.2 }}
                className={`border dark:border-gray-700 p-8 rounded-xl project animation-fade-in hover-outline`}
                style={{ backgroundImage: `url(${project.bgImage})`, backgroundSize: 'cover' }}
                onClick={() => {
                    setSelectedProject(project);
                    setIsModalOpen(true);
                }}
            >
                <div onClick={() => setSelectedProject(project)}>
                  <a
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-blue-600 hover:underline dark:text-blue-400 text-lg font-semibold"
                  >
                    <div className='text-2xl outline-text'>
                      {project.title}
                      <br />
                    </div>
                  </a>
                </div>
                <div className="mt-4">
                </div>
                {expandedIndex === index && (
                  <motion.div
                    initial={{ opacity: 0, translateY: 10 }}
                    animate={{ opacity: 1, translateY: 0 }}
                    transition={{ duration: 0.4 }}
                    className={`mt-4 ${styles['animation-fade-in']}`}
                  >
                    <p className="text-lg">{project.additionalDescription}</p>
                    {/* Add any additional content you want to show when expanded */}
                  </motion.div>
                )}
              </motion.li>
            ))}
          </ul>

          {selectedProject && (
            <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} project={selectedProject} theme={theme} />
          )}
        </section>
        <section id="contact" className='pt-16'>
          <motion.h1
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 1.4 }}
            className={`font-bold text-2xl mb-2 ${styles['animation-fade-in']}`}
          >
            Contact Me
          </motion.h1>
          <motion.p
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 1.6 }}
            className={`text-gray-600 dark:text-gray-400 ${styles['animation-fade-in']}`}
          >
            Email: <a href="mailto:egordyuzhev@gmail.com">egordyuzhev@gmail.com</a>
          </motion.p>
          <motion.p
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 1.8 }}
            className={`text-gray-600 dark:text-gray-400 ${styles['animation-fade-in']}`}
          >
            LinkedIn: <a href="https://www.linkedin.com/in/egor-dyuzhev" target="_blank" rel="noopener noreferrer">www.linkedin.com/in/egor-dyuzhev</a>
          </motion.p>
          <motion.p
            initial={{ opacity: 0, translateY: 20 }}
            animate={{ opacity: 1, translateY: 0 }}
            transition={{ duration: 0.8, delay: 2 }}
            className={`text-gray-600 dark:text-gray-400 ${styles['animation-fade-in']}`}
          >
            GitHub: <a href="https://github.com/EGORDYU" target="_blank" rel="noopener noreferrer">github.com/EGORDYU</a>
          </motion.p>
        </section>
      </main>
    </div>
  );
}
